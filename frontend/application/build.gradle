

buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.4'

        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'


        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.30")
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.4.30"
    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "tower-defense-309"
        gdxVersion = '1.10.0'
        roboVMVersion = '2.3.12'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.3'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.1.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":android") {
    apply plugin: "com.android.application"

    //apply plugin: "org.jetbrains.dokka"

    configurations { natives }

    /*tasks.dokkaHtml.configure {
        outputDirectory.set(file("../documents"))
    }*/

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        implementation 'com.android.volley:volley:1.2.1'

        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
    }
}

project(":core") {
    apply plugin: "java-library"
    apply plugin: 'com.google.protobuf'

    protobuf {
        generatedFilesBaseDir = "$projectDir/core"

        protoc {
            // You still need protoc like in the non-Android case
            artifact = 'com.google.protobuf:protoc:3.0.0'
        }
        plugins {
            //javalite {
                // The codegen for lite comes as a separate artifact
                //artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
                //id 'com.google.protobuf' version "0.8.18"
            //}
        }
        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    // In most cases you don't need the full Java output
                    // if you use the lite output.
                    remove java
                }
                task.plugins {
                    javalite {}
                }
            }
        }
    }

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"

        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation 'com.google.protobuf:protobuf-java:3.19.4'
        //implementation 'com.google.protobuf:protobuf-lite:3.0.0'
    }
}
